[package]
name = "luminol"
version = "0.4.0"
authors = [
    "Lily Lyons <lily@nowaffles.com>",
    "Egor Poleshko <somedevfox@gmail.com>",
]
edition = "2021"
rust-version = "1.62"
description = "Luminol is a FOSS recreation of RPG Maker XP in Rust with love ❤️"
license = "GPL-3.0"
readme = "README.md"
repository = "https://github.com/Speak2Erase/Luminol"
keywords = ["gamedev", "rpg", "rpg-maker"]
categories = ["games"]
build = "build.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
egui = "0.22"
eframe = { version = "0.22", features = [
    "persistence",
    "wgpu",
], default-features = false }
egui_extras = { version = "0.22", features = ["svg", "image"] }
egui-notify = { version = "0.9" } # temporary patch
egui_dock = { version = "0.6" }
catppuccin-egui = "3.0.0"

glam = { version = "0.24", features = ["bytemuck"] }

image = { version = "0.24", features = ["jpeg", "png"] }

strum = { version = "0.25", features = ["derive"] }
enum-as-inner = "0.6"
num_enum = "0.7"

bitflags = "2.3"
ouroboros = "0.18"

git-version = "0.3"

once_cell = "1.17"
parking_lot = { version = "0.12", features = [
    "deadlock_detection",
    "hardware-lock-elision",
] }
atomic_refcell = "0.1.9"
dashmap = "5.5"
crossbeam = "0.8"

futures = "0.3"
poll-promise = { version = "0.3.0", features = ["smol"] }
surf = "2.3.2"

slab = { version = "0.4", features = ["serde"] }

syntect = { version = "5.0", features = [
    "default-fancy",
], default-features = false }

rand = "0.8.5"

zip = { version = "0.6", default-features = false, features = ["deflate"] }
notify = "6.0"
rfd = "0.12"
camino = "1.1"

bytemuck = { version = "1.14", features = ["derive", "min_const_generics"] }

color-eyre = "0.6"
eyre = "0.6"
thiserror = "1.0"

paste = "1.0"
cfg-if = "1.0.0"

serde = { version = "1.0", features = ["derive"] }
alox-48 = { version = "0.4.1", default-features = false }
ron = "0.8.0"
rust-ini = "0.19.0"

tracing = "0.1.37"
tracing-subscriber = "0.3"

itertools = "0.11"
static_assertions = "1.1.0"

rodio = { version = "0.17.1" }
rustysynth = "1.2"

command-lib = { version = "*", path = "command-lib" }
rmxp-types = { version = "*", path = "rmxp-types" }
luminol-term = { version = "*", path = "luminol-term" }

steamworks = { version = "0.10.0", optional = true }
crc = { version = "3.0", optional = true }

# Internationalization and Localization
i18n-embed = { version = "0.14.0", features = [
    "fluent-system",
    "desktop-requester",
] }
i18n-embed-fl = "0.7.0"
locale-codes = "0.3.0"
rust-embed = "8.0.0"

[features]
steamworks = ["dep:steamworks", "crc"]

[target.'cfg(windows)'.dependencies]
windows = { version = "0.51.1", features = ["Win32_System_Registry"] }
winreg = "0.51.0"

[target.'cfg(windows)'.build-dependencies]
winres = "0.1"

[package.metadata.winres]
OriginalFilename = "Luminol.exe"
ProductName = "Luminol"

# Fast and performant.
[profile.release]
opt-level = 3
lto = "fat"
debug = true

# Enable only a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable max optimizations for certain dependencies, but not for our code
# These dependencies are "hot" in that they are used quite frequently

# Ui
[profile.dev.package.egui]
opt-level = 3

[profile.dev.package.eframe]
opt-level = 3

# Audio
[profile.dev.package.rodio]
opt-level = 3

[profile.dev.package.rustysynth]
opt-level = 3

# Graphics
[profile.dev.package.wgpu]
opt-level = 3

[profile.dev.package.image]
opt-level = 3

[profile.dev.package.glam]
opt-level = 3

# See why config is set up this way.
# https://bevy-cheatbook.github.io/pitfalls/performance.html#why-not-use---release

[workspace]
members = ["command-lib", "rmxp-types", "luminol-term"]

[patch.crates-io]
# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
