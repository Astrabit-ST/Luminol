[workspace]
members = ["crates/*"]
resolver = "2"

[workspace.package]
version = "0.4.0"
authors = [
    "Lily Lyons <lily@nowaffles.com>",
    "Egor Poleshko <somedevfox@gmail.com>",
]
edition = "2021"
rust-version = "1.74"
license = "GPL-3.0"
readme = "README.md"
repository = "https://github.com/Speak2Erase/Luminol"
keywords = ["gamedev", "rpg", "rpg-maker"]
categories = ["games"]
default-run = "luminol"

[workspace.dependencies]
egui = "0.22.0"
egui_extras = { version = "0.22.0", features = ["svg", "image"] }
epaint = "0.22.0"

eframe = { version = "0.22.0", features = [
    "wgpu",
    "accesskit",
    "persistence",
    "default_fonts",
], default-features = false }
egui-wgpu = "0.22.0"

wgpu = "0.16.3"
glam = { version = "0.24.2", features = ["bytemuck"] }
image = "0.24.7"

serde = { version = "1.0", features = ["derive"] }
alox-48 = { version = "0.4.1", default-features = false }
ron = "0.8.1"
serde_json = "1.0"

bytemuck = { version = "1.14.0", features = [
    "extern_crate_alloc",
    "derive",
    "min_const_generics",
] }

strum = { version = "0.25.0", features = ["derive"] }
paste = "1.0.14"
thiserror = "1.0"
bitflags = "2.4.0"
anyhow = "1.0"

parking_lot = { version = "0.12.1", features = ["deadlock_detection"] }
once_cell = "1.18.0"
crossbeam = "0.8.2"
dashmap = "5.5.3"

poll-promise = { version = "0.3.0", features = ["smol"] }

camino = "1.1.6"

slab = { version = "0.4.9", features = ["serde"] }

itertools = "0.11.0"

rfd = "0.12.0"

rand = "0.8.5"

luminol-audio = { version = "0.4.0", path = "crates/luminol-audio/" }
luminol-components = { version = "0.4.0", path = "crates/luminol-components/" }
luminol-config = { version = "0.4.0", path = "crates/luminol-config/" }
luminol-core = { version = "0.4.0", path = "crates/luminol-core/" }
luminol-data = { version = "0.4.0", path = "crates/luminol-data/" }
luminol-filesystem = { version = "0.4.0", path = "crates/luminol-filesystem/" }
luminol-graphics = { version = "0.4.0", path = "crates/luminol-graphics/" }
luminol-macros = { version = "0.4.0", path = "crates/luminol-macros/" }
luminol-modals = { version = "0.4.0", path = "crates/luminol-modals/" }
luminol-term = { version = "0.4.0", path = "crates/luminol-term/" }
luminol-ui = { version = "0.4.0", path = "crates/luminol-ui/" }

# Fast and performant.
[profile.release]
opt-level = 3
# lto = "fat"
# debug = true

# Enable only a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable max optimizations for certain dependencies, but not for our code
# These dependencies are "hot" in that they are used quite frequently

# Ui
[profile.dev.package.egui]
opt-level = 3

[profile.dev.package.eframe]
opt-level = 3

# Audio
[profile.dev.package.rodio]
opt-level = 3

[profile.dev.package.rustysynth]
opt-level = 3

# Graphics
[profile.dev.package.wgpu]
opt-level = 3

[profile.dev.package.image]
opt-level = 3

[profile.dev.package.glam]
opt-level = 3

# See why config is set up this way.
# https://bevy-cheatbook.github.io/pitfalls/performance.html#why-not-use---release

[patch.crates-io]
# We need this for rodio to work in WebAssembly until
# https://github.com/RustAudio/cpal/pull/774
# is merged.
cpal = { git = "https://github.com/DouglasDwyer/cpal.git", rev = "91aeb4d6b02c25791f636fdf92a73637597c077a" }

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
